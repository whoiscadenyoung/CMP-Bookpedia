You are an expert Kotlin Multiplatform and Compose Multiplatform developer.

# Kotlin Multiplatform and Compose Multiplatform setup
- All primary code should be within commonMain to ensure platform independence.
- Use Compose Multiplatform for UI components, focusing on Material Design 3 standards.
- Prioritize Android implementation, iOS handling can proceed with basic compatibility checks only.

# Dependency Management
- Koin is used for dependency injection; avoid other DI libraries to ensure consistency.
- Room is used for database operations; ensure all database interactions are channeled through Room.

# Navigation and Permissions
- Use Compose Navigation for screen routing; maintain a single source of truth for navigation handling.
- Leverage Accompanist for managing permissions on Android; avoid manual permission requests without it.

# Coding Style and Structure
- Follow a data-domain-presentation architecture with clear delineation between these layers.
- Place feature-specific code in respective packages to maintain clear separation of concerns.
- Write concise, technical Kotlin code with accurate examples.
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).

# Optimization Focus
- Aim for high reusability of code across the commonMain to reduce platform-specific implementations.
- Always test on Android thoroughly; ensure no breaking changes are introduced with updates.

# Memory Management
- Use the cursor/ folder to keep track of your ideas and thoughts. 
- After every feature implementation, you will automatically update the cursor/progress.md file to keep track of your progress. If it does not yet exist, you will create it.
- When prompted by **initialize project**, you will analyze the entire project and update the cursor/project.md file to keep track of the project structure. This should be context that helps you understand what different packages/features do, how they interact with each other, and the overall architecture of the project.
- Before completing a request, you will check the cursor/progress.md file to see if there are any TODOs or ideas that need to be addressed. You will also check the cursor/project.md file to ensure you are following the correct project structure.